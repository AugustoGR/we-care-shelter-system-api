// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String      @id @default(uuid())
  email           String      @unique
  password        String
  name            String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  shelters        Shelter[]
  volunteerProfile Volunteer?

  @@map("users")
}

model Shelter {
  id          String            @id @default(uuid())
  name        String
  description String?
  calamity    String
  address     String
  city        String
  state       String
  cep         String
  active      Boolean           @default(true)
  ownerId     String
  owner       User              @relation(fields: [ownerId], references: [id])
  volunteers  Volunteer[]
  animals     Animal[]
  shelteredPeople ShelteredPerson[]
  resources   Resource[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  @@map("shelters")
}

model Volunteer {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  phone        String
  skills       String[] @default([])
  status       String   @default("Ativo")
  lastActivity DateTime @default(now())
  shelterId    String
  shelter      Shelter  @relation(fields: [shelterId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("volunteers")
}

model Animal {
  id        String   @id @default(uuid())
  name      String
  species   String
  breed     String?
  age       Int?
  sex       String
  health    String
  care      String?
  rabies    Boolean  @default(false)
  cinomose  Boolean  @default(false)
  parvo     Boolean  @default(false)
  felina    Boolean  @default(false)
  photo     String?
  status    String   @default("Em Cuidado")
  shelterId String
  shelter   Shelter  @relation(fields: [shelterId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("animals")
}

model ShelteredPerson {
  id              String   @id @default(uuid())
  nome            String
  cpf             String   @unique
  dataNascimento  DateTime
  genero          String
  status          String   @default("Ativo")
  shelterId       String
  shelter         Shelter  @relation(fields: [shelterId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("sheltered_people")
}

model Resource {
  id         String    @id @default(uuid())
  nome       String
  categoria  String
  quantidade Int
  unidade    String
  validade   DateTime?
  status     String    @default("Em Estoque")
  shelterId  String
  shelter    Shelter   @relation(fields: [shelterId], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("resources")
}
